{
	"info": {
		"_postman_id": "28031bc8-e113-4fc8-86b5-be71428fca0d",
		"name": "Test Documentation",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "32733850"
	},
	"item": [
		{
			"name": "Register",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "email",
							"value": "dell@example.com",
							"type": "text"
						},
						{
							"key": "name",
							"value": "Dell",
							"type": "text"
						},
						{
							"key": "password",
							"value": "password",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://127.0.0.1:8000/account/register/",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						"account",
						"register",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.collectionVariables.set(\"access\", jsonData.access);\r",
							"pm.collectionVariables.set(\"refresh\", jsonData.refresh);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "email",
							"value": "dell@example.com",
							"type": "text"
						},
						{
							"key": "password",
							"value": "password",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://127.0.0.1:8000/account/login/",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						"account",
						"login",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Logout",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"if (pm.response.code === 205) {\r",
							"    pm.collectionVariables.unset(\"access\");\r",
							"    pm.collectionVariables.unset(\"refresh\");\r",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "refresh",
							"value": "{{refresh}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://127.0.0.1:8000/account/logout/",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						"account",
						"logout",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Project",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "ios",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://127.0.0.1:8000/api/projects/",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						"api",
						"projects",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Project List",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://127.0.0.1:8000/api/projects/",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						"api",
						"projects",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Project Detail",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://127.0.0.1:8000/api/projects/2/",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						"api",
						"projects",
						"2",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Project",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Dell-windows",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://127.0.0.1:8000/api/projects/2/",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						"api",
						"projects",
						"2",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Project",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://127.0.0.1:8000/api/projects/2/",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						"api",
						"projects",
						"2",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Create TestPlan",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"project\": 1,\r\n  \"objective\": \"To ensure quality for the new product launch\",\r\n  \"scope_in\": \"Functional testing, Performance testing\",\r\n  \"scope_out\": \"Security testing, Usability testing\",\r\n  \"test_levels\": \"Unit testing, Integration testing\",\r\n  \"types_of_testing\": \"Manual testing, Automated testing\",\r\n  \"environment_details\": \"Staging environment with replica data\",\r\n  \"test_data\": \"Sample test data for edge cases\",\r\n  \"test_manager\": \"manager\",\r\n  \"test_leads\": \"lead1, lead2\",\r\n  \"testers\": \"tester1, tester2\",\r\n  \"developers\": \"dev1, dev2\",\r\n  \"business_analysts\": \"ba1, ba2\",\r\n  \"milestones\": \"Phase 1: Planning, Phase 2: Execution\",\r\n  \"deadlines\": \"2025-01-01\",\r\n  \"dependencies\": \"Final API readiness, Database migration\",\r\n  \"deliverables\": \"Test reports, Defect logs\",\r\n  \"entry_criteria\": \"All modules developed, Test data available\",\r\n  \"exit_criteria\": \"All test cases executed, Critical defects resolved\",\r\n  \"risks\": \"Unavailability of testing tools, Resource constraints\",\r\n  \"mitigation_strategies\": \"Backup tools, Additional hires\",\r\n  \"defect_management\": \"Using Jira for defect tracking\",\r\n  \"communication_plan\": \"Weekly meetings, Daily standups\",\r\n  \"approval_process\": \"Sign-off from project stakeholders\",\r\n  \"sign_off_authorities\": \"manager, director\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://127.0.0.1:8000/api/testplans/",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						"api",
						"testplans",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "TestPlan List",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://127.0.0.1:8000/api/testplans/",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						"api",
						"testplans",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "TestPlan Detail",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://127.0.0.1:8000/api/testplans/1/",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						"api",
						"testplans",
						"1",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Update TestPlan",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"project\": 1,\r\n  \"objective\": \"To ensure quality for the new product launch\",\r\n  \"scope_in\": \"Functional testing, Performance testing\",\r\n  \"scope_out\": \"Security testing, Usability testing\",\r\n  \"test_levels\": \"Unit testing, Integration testing\",\r\n  \"types_of_testing\": \"Manual testing\",\r\n  \"environment_details\": \"Staging environment with replica data\",\r\n  \"test_data\": \"Sample test data for edge cases\",\r\n  \"test_manager\": \"manager\",\r\n  \"test_leads\": \"lead1\",\r\n  \"testers\": \"tester1\",\r\n  \"developers\": \"dev\",\r\n  \"business_analysts\": \"ba1, ba2\",\r\n  \"milestones\": \"Phase 1: Planning, Phase 2: Execution\",\r\n  \"deadlines\": \"2025-01-01\",\r\n  \"dependencies\": \"Final API readiness, Database migration\",\r\n  \"deliverables\": \"Test reports, Defect logs\",\r\n  \"entry_criteria\": \"All modules developed, Test data available\",\r\n  \"exit_criteria\": \"All test cases executed, Critical defects resolved\",\r\n  \"risks\": \"Unavailability of testing tools, Resource constraints\",\r\n  \"mitigation_strategies\": \"Backup tools, Additional hires\",\r\n  \"defect_management\": \"Using Jira for defect tracking\",\r\n  \"communication_plan\": \"Weekly meetings, Daily standups\",\r\n  \"approval_process\": \"Sign-off from project stakeholders\",\r\n  \"sign_off_authorities\": \"manager, director\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://127.0.0.1:8000/api/testplans/2/",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						"api",
						"testplans",
						"2",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete TestPlan",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://127.0.0.1:8000/api/testplans/2/",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						"api",
						"testplans",
						"2",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Export TestPlan",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://127.0.0.1:8000/api/testplans/1/?export=true",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						"api",
						"testplans",
						"1",
						""
					],
					"query": [
						{
							"key": "export",
							"value": "true"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "TestCases",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://127.0.0.1:8000/api/testcases/",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						"api",
						"testcases",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Create TestCase",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"project\": 2,\r\n  \"description\": \"Test the assembly and functionality of the MacBook to ensure proper assembly and performance of all components.\",\r\n  \"preconditions\": \"All MacBook components (display, keyboard, motherboard, battery, trackpad, etc.) must be available and in working condition.\",\r\n  \"test_steps\": \"1. Verify all MacBook parts are correctly assembled. 2. Power on the MacBook. 3. Test the functionality of the keyboard, trackpad, display, and ports. 4. Check for any visible defects or malfunctions.\",\r\n  \"expected_result\": \"The MacBook should power on, with all components functioning correctly and no visible defects.\",\r\n  \"actual_result\": \"MacBook powered on successfully, all components (keyboard, trackpad, display, ports) are working as expected with no defects.\",\r\n  \"status\": \"Fail\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://127.0.0.1:8000/api/testcases/",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						"api",
						"testcases",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "TestCase Details",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://127.0.0.1:8000/api/testcase/2/",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						"api",
						"testcase",
						"2",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Update TestCase",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"project\": 1,\r\n  \"description\": \"Test the assembly and functionality of the MacBook to ensure proper assembly and performance of all components.\",\r\n  \"preconditions\": \"All MacBook components (display, keyboard, motherboard, battery, trackpad, etc.) must be available and in working condition.\",\r\n  \"test_steps\": \"1. Verify all MacBook parts are correctly assembled. 2. Power on the MacBook. 3. Test the functionality of the keyboard, trackpad, display, and ports. 4. Check for any visible defects or malfunctions.\",\r\n  \"expected_result\": \"The MacBook should power on, with all components functioning correctly and no visible defects.\",\r\n  \"actual_result\": \"MacBook powered on successfully, all components (keyboard, trackpad, display, ports) are not working as expected with defects.\",\r\n  \"status\": \"Pass\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://127.0.0.1:8000/api/testcase/10/",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						"api",
						"testcase",
						"10",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete TestCase",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://127.0.0.1:8000/api/testcase/10/",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						"api",
						"testcase",
						"10",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Export TestCase",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://127.0.0.1:8000/api/2/testcases/?export=true",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						"api",
						"2",
						"testcases",
						""
					],
					"query": [
						{
							"key": "export",
							"value": "true"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create TestCoverage",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"project\": 1,\r\n    \"feature_description\": \"Description based on mac-book product\",\r\n    \"test_cases\": [1, 2]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://127.0.0.1:8000/api/testcoverages/",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						"api",
						"testcoverages",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "TestCoverage List",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://127.0.0.1:8000/api/testcoverages/",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						"api",
						"testcoverages",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Bug",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"project\": 1,\r\n  \"summary\": \"Defective screen detected during assembly.\",\r\n  \"steps_to_reproduce\": \"1. Begin assembly process. 2. Attach screen to chassis. 3. Conduct quality check. 4. Notice unresponsive pixels on the screen.\",\r\n  \"severity\": \"High\",\r\n  \"status\": \"Open\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://127.0.0.1:8000/api/bugreport/",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						"api",
						"bugreport",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Bug List",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://127.0.0.1:8000/api/bugreport/",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						"api",
						"bugreport",
						""
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "access",
			"value": ""
		},
		{
			"key": "refresh",
			"value": ""
		}
	]
}